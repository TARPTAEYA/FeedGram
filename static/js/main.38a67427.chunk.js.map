{"version":3,"sources":["db.js","parser.js","components/Card.js","components/LoadIndicator.js","pages/Home.js","components/Channel.js","components/FabAddButton.js","pages/ChannelList.js","pages/Settings.js","TabView.js","pages/Start.js","App.js","serviceWorker.js","index.js"],"names":["getChannels","channels","window","localStorage","getItem","JSON","parse","saveChannels","setItem","stringify","parseFeed","address","a","async","parser","Parser","parseURL","feed","copyright","description","generator","language","i","items","length","content","guid","contentSnippet","str","split","substring","Card","props","className","style","backgroundImage","item","channel","icon","author","creator","title","moment","pubDate","fromNow","href","link","target","rel","LoadIndicator","getCorsAddress","HomePage","state","feeds","feedsToLoad","onFeedLoaded","bind","this","mounted","setState","lastFetched","Date","now","parseInt","fetchFeeds","data","setStateSafe","active","console","log","then","r","concat","catch","e","finally","saveFeeds","cards","j","faviconURL","URL","hostname","push","sort","b","isoDate","key","Component","Channel","useState","setActive","Provider","value","size","onClick","toggleChannel","marginRight","color","removeChannel","ChannelModal","setTitle","setAddress","onReject","stopPropagation","type","placeholder","onChange","trim","saveChannel","FabAddButton","visible","setVisible","ChannelListPage","setChannels","toggle","index","remove","splice","indexOf","map","c","SettingsPage","location","reload","clear","TabView","setIndex","views","StartPage","flex","textAlign","category","onClicked","App","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38a67427.chunk.js","sourcesContent":["function getChannels() {\n  let channels = window.localStorage.getItem('channels');\n  if (!channels)\n    channels = '[]';\n  channels = JSON.parse(channels);\n  return channels;\n}\n\nfunction saveChannel(channel) {\n  let channels = getChannels();\n  channels.push(channel);\n  saveChannels(channels);\n  return channels;\n}\n\nfunction saveChannels(channels) {\n  window.localStorage.setItem('channels', JSON.stringify(channels));\n  makeChannelsDirty();\n}\n\nfunction removeChannel(item) {\n  let channels = getChannels();\n  channels.splice(channels.indexOf(item), 1);\n  saveChannels(channels);\n  return channels;\n}\n\nfunction toggleChannel(item) {\n  let channels = getChannels();\n  let index = 0;\n  for (; index < channels.length; index++) {\n    if (channels[index].address === item.address)\n      break;\n  }\n\n  channels[index].active = !item.active;\n  saveChannels(channels);\n  return channels;\n}\n\nfunction makeChannelsDirty() {\n  window.localStorage.setItem('lastFetched', '0');\n}\n\nexport { getChannels, removeChannel, toggleChannel, saveChannel };\n","import Parser from 'rss-parser';\n\n\nfunction trimContent(str) {\n  if (!str) return str;\n\n  str = str.split(/^(.*?)[.?!]\\s/)[0];\n  if (str.length > 200) {\n    str = str.substring(0, 200) + '...';\n  }\n\n  return str;\n}\n\n\nasync function parseFeed(address) {\n  let parser = new Parser();\n  let feed = await parser.parseURL(address);\n  delete feed.copyright;\n  delete feed.description;\n  delete feed.generator;\n  delete feed.language;\n  for (let i = 0; i < feed.items.length; i++) {\n    delete feed.items[i].content;\n    delete feed.items[i].guid;\n    feed.items[i].contentSnippet = trimContent(feed.items[i].contentSnippet);\n  }\n  return feed;\n}\n\nexport default parseFeed;\n","import React from 'react';\nimport moment from 'moment';\nimport './Card.css';\n\n\nfunction Card(props) {\n  return (\n    <div className='Card'>\n      <div className='CardHeading'>\n        <div className='SourceIcon' style={{ backgroundImage: `url(\"${props.item.channel.icon}\")` }}></div>\n        <div className='SourceMetadata'>\n          <div className='SourceName'>{ props.item.author || props.item.creator || props.item.channel.title }</div>\n          <div className='SourcePubDate'>{ moment(props.item.pubDate).fromNow() }</div>\n        </div>\n      </div>\n      <div className='CardContent'>\n        <h3>{ props.item.title }</h3>\n        <div>{ props.item.contentSnippet }</div>\n        <div>\n          <a href={props.item.link} target='_blank' rel='noopener noreferrer'>Read More</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport './LoadIndicator.css';\n\nfunction LoadIndicator() {\n  return (\n    <div className='LoadIndicator'>\n      <div className='LoadIndicatorIcon' />\n    </div>\n  );\n}\n\nexport default LoadIndicator;\n","import React, { Component } from 'react';\nimport './Home.css';\nimport { getChannels } from '../db';\nimport parseFeed from '../parser';\nimport Card from '../components/Card';\nimport LoadIndicator from '../components/LoadIndicator';\n\nconst CLASS_NAME = 'HomePage';\n\n\nfunction getCorsAddress(address) {\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    return `/${address}`;\n  }\n\n  return `https://cors-anywhere.herokuapp.com/${address}`;\n}\n\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { feeds: [], feedsToLoad: 0 };\n\n    this.onFeedLoaded = this.onFeedLoaded.bind(this);\n  }\n\n  setStateSafe(state) {\n    if (!this.mounted)\n      return;\n    this.setState(state);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    let lastFetched = window.localStorage.getItem('lastFetched', Date.now());\n    if (!lastFetched || Date.now() - parseInt(lastFetched) > 60000) {\n      this.fetchFeeds();\n    } else {\n      let data = window.localStorage.getItem('feeds');\n      let feeds = JSON.parse(data);\n      this.setStateSafe({feeds: feeds, feedsToLoad: 0});\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  async fetchFeeds() {\n    let channels = getChannels();\n    this.setStateSafe({ feedsToLoad: this.state.feedsToLoad + channels.length });\n\n    for (let i = 0; i < channels.length; i++) {\n      const channel = channels[i];\n      if (!channel.active) {\n        this.onFeedLoaded();\n        continue;\n      }\n\n      const address = getCorsAddress(channel.address);\n      console.log('fetching feeds from ' + address);\n      parseFeed(address)\n        .then(r => this.setStateSafe({ feeds: this.state.feeds.concat(r) }))\n        .catch(e => { console.log(e) })\n        .finally(this.onFeedLoaded);\n    }\n  }\n\n  onFeedLoaded() {\n    this.setStateSafe({ feedsToLoad: this.state.feedsToLoad - 1 });\n    if (this.state.feedsToLoad === 0)\n      this.saveFeeds();\n  }\n\n  saveFeeds() {\n    let feeds = JSON.stringify(this.state.feeds);\n    window.localStorage.setItem('feeds', feeds);\n    window.localStorage.setItem('lastFetched', Date.now());\n  }\n\n  render() {\n    let cards = [];\n    if (this.state.feedsToLoad === 0) {\n      let items = [];\n      for (let i = 0; i < this.state.feeds.length; i++) {\n        let feed = this.state.feeds[i];\n        for (let j = 0; j < feed.items.length; j++) {\n          let item = feed.items[j];\n          item.channel = {};\n          item.channel.title = feed.title;\n          item.channel.link = feed.link;\n\n          let faviconURL = new URL(feed.link);\n          item.channel.icon = `https://f1.allesedv.com/32/${faviconURL.hostname}`\n          items.push(item);\n        }\n      }\n\n      items.sort((a, b) => a.isoDate > b.isoDate ? -1 : 1);\n\n      for (let i = 0; i < items.length; i++) {\n        cards.push(<Card key={i} item={items[i]} />);\n      }\n    }\n\n    return (\n      <div className={CLASS_NAME}>\n        { this.state.feedsToLoad === 0 ? cards : <LoadIndicator /> }\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport './Channel.css';\nimport { IconContext } from 'react-icons';\nimport { AiOutlineEye, AiOutlineMinusCircle } from 'react-icons/ai';\n\nfunction Channel(props) {\n  const [active, setActive] = useState(props.item.active);\n\n  return (\n    <div className='Channel'>\n      <div className='ChannelMetadata'>\n        <h3>{ props.item.title }</h3>\n        <div>{ props.item.address }</div>\n      </div>\n      <div className='ChannelAction'>\n        <IconContext.Provider value={{ size: '1.5em' }}>\n          <AiOutlineEye\n            onClick={() => {\n              setActive(!active);\n              props.toggleChannel(props.item);\n            }}\n            style={{ marginRight: 18, color: active ? 'var(--primary-color)' : 'var(--light-text-color)' }}\n          />\n          <AiOutlineMinusCircle style={{ color: 'red' }} onClick={() => props.removeChannel(props.item) }/>\n        </IconContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default Channel;\n","import React, { useState } from 'react';\nimport './FabAddButton.css';\n\nimport { IconContext } from 'react-icons';\nimport { AiOutlinePlus } from 'react-icons/ai'\n\nfunction ChannelModal(props) {\n  const [title, setTitle] = useState('');\n  const [address, setAddress] = useState('');\n\n  return (\n    <div className='ChannelModalOuter' onClick={() => props.onReject()}>\n      <div className='ChannelModal' onClick={ e => e.stopPropagation() }>\n        <h3>Add New Channel</h3>\n        <input type='text' placeholder='Title' value={title} onChange={e => setTitle(e.target.value)}/>\n        <input type='text' placeholder='Feed Address' value={address} onChange={e => setAddress(e.target.value)}/>\n        <button onClick={() => {\n          if (!title.trim() || !address.trim()) return;\n\n          let channel = {};\n          channel.title = title;\n          channel.address = address;\n          channel.active = true;\n          props.saveChannel(channel);\n          props.onReject();\n        }}>Save</button>\n      </div>\n    </div>\n  );\n}\n\nfunction FabAddButton(props) {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      { visible ? <ChannelModal saveChannel={props.saveChannel} onReject={() => setVisible(false)}/> : <></> }\n\n      <div className='FabAddButton' onClick={() => setVisible(true) }>\n        <IconContext.Provider value={{ size: '2em' }}>\n          <AiOutlinePlus style={{ color: 'white' }} />\n        </IconContext.Provider>\n      </div>\n    </>\n  );\n}\n\nexport default FabAddButton;\n","import React, { useState } from 'react';\nimport Channel from '../components/Channel';\nimport FabAddButton from '../components/FabAddButton';\nimport { getChannels, removeChannel, toggleChannel, saveChannel } from '../db';\nimport './ChannelList.css';\n\nfunction ChannelListPage() {\n  const [channels, setChannels] = useState(getChannels());\n\n  function toggle(item) {\n    setChannels(toggleChannel(item));\n  }\n\n  function remove(item) {\n    setChannels(removeChannel(item));\n  }\n\n  function save(item) {\n    setChannels(saveChannel(item));\n  }\n\n  return (\n    <div className='ChannelListPage'>\n      { channels.map((c, i) => <Channel key={i} item={c} toggleChannel={toggle} removeChannel={remove} />) }\n\n      <FabAddButton saveChannel={save} />\n    </div>\n  );\n}\n\nexport default ChannelListPage;\n","import React from 'react';\nimport './Settings.css';\n\nfunction SettingsPage() {\n  return (\n    <div className='SettingsPage'>\n      <div>About FeedGram</div>\n      <div>Contact</div>\n      <div>Terms of Use</div>\n      <div>Open Source Licenses</div>\n      <div onClick={() => {\n        window.localStorage.setItem('lastFetched', '0');\n        window.localStorage.setItem('feeds', '[]');\n        window.location.reload();\n      }}>Empty Feeds Cache</div>\n      <div onClick={() => {\n        window.localStorage.clear();\n        window.location.reload();\n      }} style={{ color: 'red' }}>Clear All Data</div>\n    </div>\n  );\n}\n\nexport default SettingsPage;\n","import React, { useState } from 'react';\nimport './TabView.css';\n\nimport HomePage from './pages/Home';\nimport ChannelListPage from './pages/ChannelList';\nimport SettingsPage from './pages/Settings';\n\nimport { IconContext } from 'react-icons';\nimport { AiOutlineHome, AiOutlineUnorderedList, AiOutlineSetting } from 'react-icons/ai';\n\nfunction TabView() {\n  const [index, setIndex] = useState(0);\n  const views = [<HomePage />, <ChannelListPage />, <SettingsPage />];\n\n  return (\n    <div className='TabView'>\n\n      { views[index] }\n\n      <div className='BottomAppBar'>\n        <IconContext.Provider value={{ size: '1.5em' }}>\n          <div onClick={() => setIndex(0)} style={{ color: index === 0 ? 'var(--primary-color)' : 'inherit' }}><AiOutlineHome /></div>\n          <div onClick={() => setIndex(1)} style={{ color: index === 1 ? 'var(--primary-color)' : 'inherit' }}><AiOutlineUnorderedList /></div>\n          <div onClick={() => setIndex(2)} style={{ color: index === 2 ? 'var(--primary-color)' : 'inherit' }}><AiOutlineSetting /></div>\n        </IconContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default TabView;\n","import React from 'react';\nimport LoadIndicator from '../components/LoadIndicator';\nimport { getChannels } from '../db';\nimport './Start.css';\n\nfunction saveDefaultChannels() {\n  const channels = [\n    {\n      title: 'CNN World',\n      address: 'http://rss.cnn.com/rss/edition_world.rss',\n      active: true,\n      category: 'news'\n    },\n    {\n      title: 'ELLE',\n      address: 'https://www.elle.com/rss/all.xml/',\n      active: true,\n      category: 'fashion'\n    },\n    {\n      title: 'WIRED',\n      address: 'https://www.wired.com/feed/rss',\n      active: true,\n      category: 'technology'\n    }\n  ];\n\n  window.localStorage.setItem('channels', JSON.stringify(channels));\n}\n\nfunction StartPage(props) {\n  let index = 0;\n  const views = [\n    <LoadIndicator />,\n    <div style={{ flex: 1, textAlign: 'center' }}>\n      <button onClick={() => {\n        saveDefaultChannels();\n        props.onClicked();\n      }}>Continue</button>\n    </div>\n  ];\n\n  let channels = getChannels();\n  if (channels.length === 0) {\n    index = 1;\n  } else {\n    props.onClicked();\n  }\n\n  return (\n    <div className='page StartPage'>\n      <div style={{ flex: index + 1 }}>\n        <h1>Welcome to <span>FeedGram</span></h1>\n        <p>Get latest news and feeds from sources you love for free!</p>\n      </div>\n\n      { views[index] }\n\n      <div className='container' style={{ textAlign: 'center' }}>\n        <p>v0.1.0</p>\n        <p>Built with love in India.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default StartPage;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport TabView from './TabView';\nimport StartPage from './pages/Start';\n\nfunction App() {\n  const [index, setIndex] = useState(0);\n  const views = [<StartPage onClicked={() => setIndex(1)} />, <TabView />]\n  return (\n    views[index]\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}